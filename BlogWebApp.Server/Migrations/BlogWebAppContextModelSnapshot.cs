// <auto-generated />
using System;
using BlogWebApp.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogWebApp.Server.Migrations
{
    [DbContext(typeof(BlogWebAppContext))]
    partial class BlogWebAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlogWebApp.Server.Models.BusinessContactDetails", b =>
                {
                    b.Property<int>("BusinessContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessContactId"));

                    b.Property<string>("BusinessAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusinessContactId");

                    b.ToTable("BusinessContactDetails");

                    b.HasData(
                        new
                        {
                            BusinessContactId = 1,
                            BusinessAddress = "1600 Pennsylvania Avenue NW, Washington, DC 20500",
                            BusinessEmail = "I Aint Giving you that (;",
                            BusinessName = "On A Whim Studios",
                            BusinessPhone = "(360) 360-3600"
                        },
                        new
                        {
                            BusinessContactId = 2,
                            BusinessAddress = "1600 Pennsylvania Avenue NW, Washington, DC 20500",
                            BusinessEmail = "jesse@toast.llc",
                            BusinessName = "Toast LLC.",
                            BusinessPhone = "(360) 555-5555"
                        },
                        new
                        {
                            BusinessContactId = 3,
                            BusinessAddress = "1600 Pennsylvania Avenue NW, Washington, DC 20500",
                            BusinessEmail = "Bogus@whatevenisthelimitforthelengthoftheemaildomainidontreallyknow.idk",
                            BusinessName = "Bogus Industries",
                            BusinessPhone = "(360) 555-5555"
                        });
                });

            modelBuilder.Entity("BlogWebApp.Server.Models.DynamicContent", b =>
                {
                    b.Property<int>("DynamicContentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DynamicContentID"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DynamicContentID");

                    b.ToTable("DynamicContent");

                    b.HasData(
                        new
                        {
                            DynamicContentID = 1,
                            Author = "Dr. Meowdy",
                            Body = "This is a test of the first post made from the seeded data (:",
                            CreatedDate = new DateTime(2025, 2, 2, 17, 54, 15, 304, DateTimeKind.Local).AddTicks(9069),
                            Description = "Juan Post",
                            ModifiedDate = new DateTime(2025, 2, 2, 17, 54, 15, 304, DateTimeKind.Local).AddTicks(9123),
                            Title = "Big First Post"
                        },
                        new
                        {
                            DynamicContentID = 2,
                            Author = "Not You",
                            Body = "This is another sample post of stuff. Idk, I making a post while I be snacking.",
                            CreatedDate = new DateTime(2025, 2, 2, 17, 54, 15, 304, DateTimeKind.Local).AddTicks(9125),
                            Description = "I dont really know what the post is or whatever.",
                            ModifiedDate = new DateTime(2025, 2, 2, 17, 54, 15, 304, DateTimeKind.Local).AddTicks(9126),
                            Title = "What kind of Post is this?"
                        });
                });

            modelBuilder.Entity("BlogWebApp.Server.Models.FeedbackData", b =>
                {
                    b.Property<int>("FeedbackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackID"));

                    b.Property<string>("FeedbackDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedbackEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedbackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeedbackID");

                    b.ToTable("FeedbackData");

                    b.HasData(
                        new
                        {
                            FeedbackID = 1,
                            FeedbackDescription = "This design sucks. It doesnt exist!",
                            FeedbackEmail = "stuff@fauxemail.com",
                            FeedbackName = "Design"
                        },
                        new
                        {
                            FeedbackID = 2,
                            FeedbackDescription = "Why Am I getting an error 418?",
                            FeedbackEmail = "coffee@teapot.com",
                            FeedbackName = "Server"
                        });
                });

            modelBuilder.Entity("BlogWebApp.Server.Models.StaticContent", b =>
                {
                    b.Property<int>("StaticContentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaticContentID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaticContentID");

                    b.ToTable("StaticContent");

                    b.HasData(
                        new
                        {
                            StaticContentID = 1,
                            Content = "Awesome Layout Content!",
                            CreatedDate = new DateTime(2025, 2, 2, 17, 54, 15, 304, DateTimeKind.Local).AddTicks(9171),
                            ModifiedDate = new DateTime(2025, 2, 2, 17, 54, 15, 304, DateTimeKind.Local).AddTicks(9172),
                            Name = "Wireframe"
                        },
                        new
                        {
                            StaticContentID = 2,
                            Content = "Have you read the Scrum Manifesto?",
                            CreatedDate = new DateTime(2025, 2, 2, 17, 54, 15, 304, DateTimeKind.Local).AddTicks(9174),
                            ModifiedDate = new DateTime(2025, 2, 2, 17, 54, 15, 304, DateTimeKind.Local).AddTicks(9175),
                            Name = "Scrum Bible"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
